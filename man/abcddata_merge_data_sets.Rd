% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abcddata-utilities.R
\name{abcddata_merge_data_sets}
\alias{abcddata_merge_data_sets}
\title{Merge Columns From Data Sets}
\usage{
abcddata_merge_data_sets(
  dtf_base,
  dtf_to_merge,
  lst_to_match_over,
  chr_columns_to_add,
  lgc_progress = FALSE
)
}
\arguments{
\item{dtf_base}{A data frame, the data set to
add columns to.}

\item{dtf_to_merge}{A data frame, the data set
to add columns from.}

\item{lst_to_match_over}{A list of character
vectors with the columns to match over for,
each vector giving \link{1} the column in \code{dtf_base}
and \link{2} the column in \code{dtf_to_merge}. Allows
matching over, for example, participant IDs and
time points. Columns should be chosen to ensure
only a single row is matched.}

\item{chr_columns_to_add}{A character vector, the
columns in \code{dtf_to_merge} to add to \code{dtf_base}.
If a named vector is provided, the vector names
are used as the new column labels.}

\item{lgc_progress}{Logical; if \code{TRUE} displays the
progress of the function for debugging purposes.}
}
\value{
A data frame.
}
\description{
Function to merge columns from a data set to
a base data set.
}
\examples{
dtf_base <- data.frame(
  V1 = rep( LETTERS[1:3], each = 3 ),
  V2 = rep( 1:3, 3 )
)

dtf_to_merge <- data.frame(
  va = rep( LETTERS[1:4], each = 3 ),
  vb = rep( c( 1, 3, 4 ), 4 ),
  y1 = 1:12,
  y2 = 13:24
)

dtf_base <- abcddata_merge_data_sets(
  dtf_base, dtf_to_merge,
  list( c( 'V1', 'va' ), c( 'V2', 'vb' ) ),
  c(
    Y1 = y1, Y2 = y2
  )
)

}
